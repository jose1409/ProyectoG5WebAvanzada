@model IEnumerable<Proyecto.UI.Models.Producto>
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "Productos";
}

@section Styles {
    <link rel="stylesheet" href="~/css/admin-productos.css" asp-append-version="true" />
}

<div class="admin-botero">
    <div class="contenido-centrado">

        <!-- Encabezado -->
        <div class="admin-header">
            <h1 class="admin-title">Productos</h1>

            <button class="btn btn-sm btn-botero-primary btnAgregarProducto"
                    data-edicion="false"
                    data-toggle="modal"
                    data-target="#ActualizarProductoModal">
                Agregar nuevo Producto
            </button>
        </div>

        <!-- Tabla estilo tarjetas -->
        <div class="table-wrapper">
            <table class="table table-botero">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>@Html.DisplayNameFor(model => model.Descripcion)</th>
                        <th>@Html.DisplayNameFor(model => model.IdCategoria)</th>
                        <th>@Html.DisplayNameFor(model => model.Precio)</th>
                        <th>@Html.DisplayNameFor(model => model.Detalle)</th>
                        <th>@Html.DisplayNameFor(model => model.RutaImagen)</th>
                        <th>@Html.DisplayNameFor(model => model.Existencias)</th>
                        <th>@Html.DisplayNameFor(model => model.Activo)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var tieneImg = item.RutaImagen != null && item.RutaImagen.Length > 0;
                        var imagenBase64 = tieneImg ? "data:image/png;base64," + Convert.ToBase64String(item.RutaImagen) : null;

                        <tr>
                            <td>@item.IdProducto</td>
                            <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                            <td>
                                @{
                                    var categoria = ((IEnumerable<Proyecto.UI.Models.Categoria>)ViewBag.Categorias)
                                    .FirstOrDefault(c => c.IdCategoria == item.IdCategoria);
                                }
                                @(categoria != null ? categoria.Descripcion : "Sin categoría")
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Precio)</td>
                            <td>@Html.DisplayFor(modelItem => item.Detalle)</td>
                            <td>
                                @if (tieneImg)
                                {
                                    <img src="@imagenBase64" alt="Imagen de @item.Descripcion" class="thumb" />
                                }
                                else
                                {
                                    <span class="text-muted">Sin imagen</span>
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Existencias)</td>
                            <td>
                                @if (item.Activo)
                                {
                                    <span class="badge-estado badge-activo">Activo</span>
                                }
                                else
                                {
                                    <span class="badge-estado badge-inactivo">Inactivo</span>
                                }
                            </td>
                            <td>
                                <button class="btn btn-sm btn-botero-primary btnEditarProducto"
                                        data-id="@item.IdProducto"
                                        data-descripcion="@item.Descripcion"
                                        data-precio="@item.Precio"
                                        data-detalle="@item.Detalle"
                                        data-categoria="@item.IdCategoria"
                                        data-imagen="data:image/png;base64,@Convert.ToBase64String(item.RutaImagen ?? new byte[0])"
                                        data-activo="@item.Activo"
                                        data-edicion="true"
                                        data-toggle="modal"
                                        data-target="#ActualizarProductoModal">
                                    Editar
                                </button>
                                |
                                @Html.ActionLink("Eliminar", "EliminarProducto", new { idProducto = item.IdProducto }, new { @class = "btn-botero-link" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal para Crear/Editar Producto -->
<div class="modal fade modal-botero" id="ActualizarProductoModal" tabindex="-1" role="dialog" aria-labelledby="modalProductoLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title">Producto</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <input type="hidden" id="IdProducto" name="IdProducto" class="form-control">

                <div class="form-group">
                    <label>Descripción</label>
                    <input type="text" id="DescripcionProducto" name="Descripcion" class="form-control">
                </div>

                <div class="form-group">
                    <label>Detalle</label>
                    <input type="text" id="DetalleProducto" name="Detalle" class="form-control">
                </div>

                <div class="form-group">
                    <label>Categoría</label>
                    <select id="CategoriaProducto" name="IdCategoria" class="form-control">
                        <option value="">--Seleccione--</option>
                        @foreach (var cat in (IEnumerable<Proyecto.UI.Models.Categoria>)ViewBag.Categorias)
                        {
                            <option value="@cat.IdCategoria">@cat.Descripcion</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>Precio</label>
                    <input type="text" id="PrecioProducto" name="Precio" class="form-control">
                </div>

                <div class="form-group">
                    <div class="file-row">
                        <input type="file" id="ImagenGrid" name="ImagenUrl" onchange="previewImageGrids(this)">
                        <div id="previewImagen">
                            <span class="text-muted">Sin imagen</span>
                        </div>
                    </div>
                </div>

                <!-- Switch de estado -->
                <div class="form-group d-flex align-items-center">
                    <label class="mb-0 mr-2">Activo</label>
                    <label class="toggle-switch mb-0">
                        <input type="checkbox" id="estadoProducto" name="Activo">
                        <span class="slider"></span>
                    </label>
                </div>

                <input type="hidden" id="ImagenBase64Actual" name="ImagenBase64Actual" />
                <input type="hidden" id="edicionEstado" name="edicion" class="form-control" />
            </div>

            <div class="modal-footer">
                <button type="button" id="btnGuardarModalProducto" class="btn btn-botero-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery.min.js"></script>
<script src="~/js/Producto/LlenarModal.js"></script>
<script src="~/js/PreviewPhotoGrids/PreviewPhotoGrids.js"></script>
